buildscript {
  ext {
    javaVersion = '1.5'
    reflectionsVersion = '0.9.11'
    logbackVersion = '1.2.3'
    slf4jVersion = '1.7.25'
    junitVersion = '4.12'
    injectVersion = '1'
    assertjVersion = '3.11.1'
    vcsUrl = 'https://github.com/daggerok/daggerok-context.git'
  }
}

plugins {
  id 'idea'
  id 'java'
  id 'maven'
  id 'signing'
  id 'eclipse'
  id 'com.jfrog.bintray' version '1.8.4' apply false
}

version = '1.0.5'
group = 'com.github.daggerok'
archivesBaseName = 'daggerok-context'
description = 'Daggerok Context - Java dependency injection library.'

defaultTasks 'clean', 'build', 'install', 'publishToMavenLocal', 'publish'

sourceCompatibility = targetCompatibility = "$javaVersion"

allprojects {
  repositories {
    mavenLocal()
    mavenCentral()
  }
}

compileJava {
  options.compilerArgs += ['-Xlint:unchecked']
}

dependencies {
  compile("org.reflections:reflections:$reflectionsVersion")
  compile("javax.inject:javax.inject:$injectVersion")
  compile("org.slf4j:slf4j-api:$slf4jVersion")

  runtime("ch.qos.logback:logback-classic:$logbackVersion")
  compileOnly("ch.qos.logback:logback-classic:$logbackVersion")
  testCompile("ch.qos.logback:logback-classic:$logbackVersion")

  testCompile("junit:junit:$junitVersion")
  testCompile("org.assertj:assertj-core:$assertjVersion")
}

wrapper {
  gradleVersion = '4.10'
  distributionType = 'BIN'
}

clean.doFirst {
  ['out'].each {
    delete "$projectDir/$it"
  }
}

def getPropOrSystemOrDefault(def propertyName, def systemPropertyName) {
  def defaultValue = System.getenv("$systemPropertyName") ?: 'not-present'
  return project.hasProperty("$propertyName") ? project.property("$propertyName") : defaultValue
}

apply from: "$project.projectDir/gradle/maven-publish.gradle"
apply from: "$project.projectDir/gradle/bintray.gradle"

if (project.hasProperty('maven-central')) {
  apply from: "$project.projectDir/gradle/maven-central.gradle"
}
